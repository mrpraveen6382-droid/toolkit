<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free online image compression tool. Reduce image file size while maintaining quality. Support for JPG, PNG, and WebP formats.">
    <meta name="keywords" content="image compression, image optimizer, reduce image size, online tool, JPG compression, PNG compression">
    <meta name="author" content="ImageCompress Pro">
    <title>ImageCompress Pro | Free Online Image Compression Tool</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/compressorjs@1.1.1/dist/compressor.min.js"></script>
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #7209b7;
            --accent: #f72585;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --success: #4cc9f0;
            --border-radius: 12px;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7ff;
            color: var(--dark);
            line-height: 1.6;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 1.5rem 0;
            box-shadow: var(--shadow);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 1.8rem;
            font-weight: 700;
        }

        .logo i {
            color: var(--accent);
        }

        nav ul {
            display: flex;
            list-style: none;
            gap: 1.5rem;
        }

        nav a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            transition: var(--transition);
            padding: 5px 10px;
            border-radius: 5px;
        }

        nav a:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .hero {
            text-align: center;
            padding: 3rem 0;
            background: white;
            margin: 2rem auto;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            max-width: 95%;
        }

        .hero h1 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: var(--primary);
        }

        .hero p {
            font-size: 1.2rem;
            color: var(--gray);
            max-width: 700px;
            margin: 0 auto 2rem;
        }

        .compression-tool {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .tool-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
        }

        @media (max-width: 768px) {
            .tool-container {
                grid-template-columns: 1fr;
            }
        }

        .upload-area {
            border: 2px dashed var(--primary);
            border-radius: var(--border-radius);
            padding: 2rem;
            text-align: center;
            transition: var(--transition);
            cursor: pointer;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 300px;
        }

        .upload-area:hover {
            background-color: rgba(67, 97, 238, 0.05);
        }

        .upload-area i {
            font-size: 3rem;
            color: var(--primary);
            margin-bottom: 1rem;
        }

        .upload-area h3 {
            margin-bottom: 1rem;
            color: var(--primary);
        }

        .upload-area p {
            color: var(--gray);
            margin-bottom: 1.5rem;
        }

        .btn {
            background-color: var(--primary);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 50px;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
        }

        .btn-secondary {
            background-color: var(--secondary);
        }

        .btn-secondary:hover {
            background-color: #6511a0;
        }

        .btn-accent {
            background-color: var(--accent);
        }

        .btn-accent:hover {
            background-color: #e11576;
        }

        .btn-outline {
            background-color: transparent;
            border: 2px solid var(--primary);
            color: var(--primary);
        }

        .btn-outline:hover {
            background-color: rgba(67, 97, 238, 0.1);
        }

        .controls {
            margin: 2rem 0;
        }

        .control-group {
            margin-bottom: 1.5rem;
        }

        .control-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--dark);
        }

        .slider-container {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .slider {
            flex: 1;
            -webkit-appearance: none;
            width: 100%;
            height: 8px;
            border-radius: 5px;
            background: linear-gradient(to right, var(--success), var(--accent));
            outline: none;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary);
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .slider-value {
            font-weight: 700;
            color: var(--primary);
            min-width: 40px;
        }

        .preview-container {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .preview-box {
            border: 1px solid #e0e0e0;
            border-radius: var(--border-radius);
            padding: 1rem;
            text-align: center;
        }

        .preview-box h4 {
            margin-bottom: 1rem;
            color: var(--dark);
        }

        .preview-image {
            max-width: 100%;
            max-height: 200px;
            border-radius: 8px;
            margin: 0 auto;
            display: block;
        }

        .file-info {
            display: flex;
            justify-content: space-between;
            margin-top: 1rem;
            font-size: 0.9rem;
            color: var(--gray);
        }

        .stats {
            display: flex;
            justify-content: space-between;
            background: var(--light);
            padding: 1rem;
            border-radius: var(--border-radius);
            margin-top: 1rem;
        }

        .stat-item {
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--gray);
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .ad-container {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 1.5rem;
            margin: 2rem 0;
            text-align: center;
            min-height: 280px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .ad-label {
            font-size: 0.8rem;
            color: var(--gray);
            margin-bottom: 0.5rem;
        }

        .ad-placeholder {
            width: 100%;
            height: 250px;
            background: #f0f2f5;
            border: 1px dashed #ccc;
            border-radius: 8px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: var(--gray);
        }

        .ad-placeholder i {
            font-size: 2rem;
            margin-bottom: 1rem;
        }

        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin: 3rem 0;
        }

        .feature-card {
            background: white;
            border-radius: var(--border-radius);
            padding: 1.5rem;
            box-shadow: var(--shadow);
            text-align: center;
            transition: var(--transition);
        }

        .feature-card:hover {
            transform: translateY(-5px);
        }

        .feature-icon {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 1rem;
        }

        .feature-card h3 {
            margin-bottom: 1rem;
            color: var(--dark);
        }

        .feature-card p {
            color: var(--gray);
        }

        .advanced-options {
            background: var(--light);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            margin-top: 2rem;
        }

        .advanced-options h3 {
            margin-bottom: 1rem;
            color: var(--primary);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .advanced-options h3 i {
            font-size: 1.2rem;
        }

        .options-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }

        .option-item {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .option-item label {
            font-weight: 500;
            color: var(--dark);
        }

        .option-item select, .option-item input {
            padding: 10px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            background: white;
        }

        .history-section {
            margin-top: 3rem;
        }

        .history-section h2 {
            margin-bottom: 1.5rem;
            color: var(--primary);
            text-align: center;
        }

        .history-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 1rem;
        }

        .history-item {
            background: white;
            border-radius: var(--border-radius);
            padding: 1rem;
            box-shadow: var(--shadow);
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
        }

        .history-item:hover {
            transform: scale(1.05);
        }

        .history-item img {
            width: 100%;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            margin-bottom: 0.5rem;
        }

        .history-item .file-name {
            font-size: 0.8rem;
            color: var(--gray);
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        footer {
            background: var(--dark);
            color: white;
            padding: 3rem 0 1.5rem;
            margin-top: 3rem;
        }

        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .footer-column h3 {
            margin-bottom: 1.5rem;
            font-size: 1.2rem;
            position: relative;
            padding-bottom: 0.5rem;
        }

        .footer-column h3::after {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: 40px;
            height: 2px;
            background: var(--accent);
        }

        .footer-column ul {
            list-style: none;
        }

        .footer-column ul li {
            margin-bottom: 0.8rem;
        }

        .footer-column a {
            color: #adb5bd;
            text-decoration: none;
            transition: var(--transition);
        }

        .footer-column a:hover {
            color: white;
            padding-left: 5px;
        }

        .copyright {
            text-align: center;
            padding-top: 1.5rem;
            border-top: 1px solid #495057;
            color: #adb5bd;
            font-size: 0.9rem;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: 1rem;
            }
            
            nav ul {
                gap: 1rem;
            }
            
            .hero h1 {
                font-size: 2rem;
            }
            
            .action-buttons {
                flex-direction: column;
            }
            
            .btn {
                width: 100%;
                justify-content: center;
            }
        }

        /* Toast notifications */
        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--dark);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            display: flex;
            align-items: center;
            gap: 10px;
            transform: translateY(100px);
            opacity: 0;
            transition: var(--transition);
            z-index: 1000;
        }

        .toast.show {
            transform: translateY(0);
            opacity: 1;
        }

        .toast i {
            color: var(--success);
        }

        /* Loading spinner */
        .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Progress bar */
        .progress-bar {
            width: 100%;
            height: 6px;
            background: #e0e0e0;
            border-radius: 3px;
            overflow: hidden;
            margin-top: 1rem;
        }

        .progress {
            height: 100%;
            background: linear-gradient(to right, var(--success), var(--primary));
            width: 0%;
            transition: width 0.3s ease;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class="container">
            <div class="header-content">
                <div class="logo">
                    <i class="fas fa-compress-alt"></i>
                    <span>ImageCompress Pro</span>
                </div>
                <nav>
                    <ul>
                        <li><a href="#">Home</a></li>
                        <li><a href="#">How It Works</a></li>
                        <li><a href="#">Features</a></li>
                        <li><a href="#">Pricing</a></li>
                        <li><a href="#">Blog</a></li>
                        <li><a href="#">Contact</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="hero">
        <div class="container">
            <h1>Compress Images Without Losing Quality</h1>
            <p>Reduce image file size by up to 80% while maintaining visual quality. Fast, secure, and completely free!</p>
        </div>
    </section>

    <!-- Main Content -->
    <div class="container">
        <!-- Ad Space - Top -->
        <div class="ad-container">
            <div class="ad-label">Advertisement</div>
            <div class="ad-placeholder">
                <i class="fas fa-ad"></i>
                <p>Google AdSense Ad Unit</p>
                <p>Ad Unit ID: ca-pub-xxxxxxxxxxxxx/xxxxxxxxxx</p>
            </div>
        </div>

        <!-- Compression Tool -->
        <section class="compression-tool">
            <h2 style="text-align: center; margin-bottom: 2rem; color: var(--primary);">Image Compression Tool</h2>
            
            <div class="tool-container">
                <!-- Upload Area -->
                <div class="upload-area" id="uploadArea">
                    <i class="fas fa-cloud-upload-alt"></i>
                    <h3>Upload Your Image</h3>
                    <p>Drag & drop your image here or click to browse</p>
                    <p>Supports: JPG, PNG, WebP, GIF (Max: 10MB)</p>
                    <button class="btn" id="browseBtn">
                        <i class="fas fa-folder-open"></i> Browse Files
                    </button>
                    <input type="file" id="fileInput" accept="image/*" style="display: none;">
                    <div class="progress-bar" id="uploadProgress" style="display: none;">
                        <div class="progress" id="uploadProgressBar"></div>
                    </div>
                </div>

                <!-- Controls and Preview -->
                <div class="preview-container">
                    <!-- Compression Controls -->
                    <div class="controls">
                        <div class="control-group">
                            <label for="compressionLevel">Compression Level</label>
                            <div class="slider-container">
                                <input type="range" min="0" max="100" value="70" class="slider" id="compressionLevel">
                                <span class="slider-value" id="compressionValue">70%</span>
                            </div>
                        </div>
                        
                        <div class="control-group">
                            <label for="outputFormat">Output Format</label>
                            <select id="outputFormat" class="btn" style="width: 100%; padding: 12px; background: white; color: var(--dark); border: 1px solid #e0e0e0;">
                                <option value="original">Same as original</option>
                                <option value="jpg">JPG</option>
                                <option value="png">PNG</option>
                                <option value="webp">WebP</option>
                            </select>
                        </div>
                    </div>

                    <!-- Preview Section -->
                    <div class="preview-box">
                        <h4>Original Image</h4>
                        <div id="originalPreview" class="preview-container">
                            <p style="color: var(--gray); padding: 3rem 0;">No image selected</p>
                        </div>
                        <div class="file-info">
                            <span>Size: <span id="originalSize">-</span></span>
                            <span>Dimensions: <span id="originalDimensions">-</span></span>
                        </div>
                    </div>

                    <div class="preview-box">
                        <h4>Compressed Image</h4>
                        <div id="compressedPreview" class="preview-container">
                            <p style="color: var(--gray); padding: 3rem 0;">Compressed image will appear here</p>
                        </div>
                        <div class="file-info">
                            <span>Size: <span id="compressedSize">-</span></span>
                            <span>Dimensions: <span id="compressedDimensions">-</span></span>
                        </div>
                    </div>

                    <!-- Stats -->
                    <div class="stats">
                        <div class="stat-item">
                            <div class="stat-value" id="savingsPercent">0%</div>
                            <div class="stat-label">Size Reduced</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="savingsSize">0 KB</div>
                            <div class="stat-label">Saved</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="qualityValue">High</div>
                            <div class="stat-label">Quality</div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="action-buttons">
                        <button class="btn btn-secondary" id="compressBtn" disabled>
                            <i class="fas fa-compress-alt"></i> Compress Image
                        </button>
                        <button class="btn btn-accent" id="downloadBtn" disabled>
                            <i class="fas fa-download"></i> Download
                        </button>
                        <button class="btn btn-outline" id="resetBtn">
                            <i class="fas fa-redo"></i> Reset
                        </button>
                    </div>
                </div>
            </div>

            <!-- Advanced Options -->
            <div class="advanced-options">
                <h3><i class="fas fa-cog"></i> Advanced Options</h3>
                <div class="options-grid">
                    <div class="option-item">
                        <label for="resizeToggle">Resize Image</label>
                        <select id="resizeToggle">
                            <option value="no">No Resize</option>
                            <option value="width">By Width</option>
                            <option value="height">By Height</option>
                            <option value="percentage">By Percentage</option>
                        </select>
                    </div>
                    <div class="option-item">
                        <label for="resizeValue">Resize Value</label>
                        <input type="number" id="resizeValue" placeholder="e.g., 800" min="1" disabled>
                    </div>
                    <div class="option-item">
                        <label for="colorSpace">Color Space</label>
                        <select id="colorSpace">
                            <option value="srgb">sRGB (Standard)</option>
                            <option value="rgb">RGB</option>
                        </select>
                    </div>
                    <div class="option-item">
                        <label for="metadata">Keep Metadata</label>
                        <select id="metadata">
                            <option value="false">Remove</option>
                            <option value="true">Keep</option>
                        </select>
                    </div>
                </div>
            </div>
        </section>

        <!-- Ad Space - Middle -->
        <div class="ad-container">
            <div class="ad-label">Advertisement</div>
            <div class="ad-placeholder">
                <i class="fas fa-ad"></i>
                <p>Google AdSense Ad Unit</p>
                <p>Ad Unit ID: ca-pub-xxxxxxxxxxxxx/xxxxxxxxxx</p>
            </div>
        </div>

        <!-- Compression History -->
        <section class="history-section">
            <h2>Recent Compressions</h2>
            <div class="history-list" id="historyList">
                <!-- History items will be added here dynamically -->
                <p style="grid-column: 1 / -1; text-align: center; color: var(--gray);">No compression history yet</p>
            </div>
        </section>

        <!-- Features Section -->
        <section class="features">
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-bolt"></i>
                </div>
                <h3>Fast Compression</h3>
                <p>Compress images in seconds with our optimized algorithms that maintain quality while reducing file size.</p>
            </div>
            
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-shield-alt"></i>
                </div>
                <h3>Secure & Private</h3>
                <p>Your images are processed securely in your browser. We don't store or upload your files to any server.</p>
            </div>
            
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <h3>Quality Control</h3>
                <p>Adjust compression level with real-time preview to find the perfect balance between size and quality.</p>
            </div>
            
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-mobile-alt"></i>
                </div>
                <h3>Fully Responsive</h3>
                <p>Works perfectly on all devices - desktop, tablet, and mobile. Compress images anywhere, anytime.</p>
            </div>
        </section>
    </div>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-column">
                    <h3>ImageCompress Pro</h3>
                    <p style="color: #adb5bd;">The ultimate online image compression tool for web developers, designers, and photographers.</p>
                </div>
                
                <div class="footer-column">
                    <h3>Quick Links</h3>
                    <ul>
                        <li><a href="#">Home</a></li>
                        <li><a href="#">How It Works</a></li>
                        <li><a href="#">Features</a></li>
                        <li><a href="#">Pricing</a></li>
                        <li><a href="#">Blog</a></li>
                    </ul>
                </div>
                
                <div class="footer-column">
                    <h3>Resources</h3>
                    <ul>
                        <li><a href="#">Help Center</a></li>
                        <li><a href="#">API Documentation</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                        <li><a href="#">Terms of Service</a></li>
                        <li><a href="#">Sitemap</a></li>
                    </ul>
                </div>
                
                <div class="footer-column">
                    <h3>Contact Us</h3>
                    <ul>
                        <li><a href="mailto:support@imagecompresspro.com">support@imagecompresspro.com</a></li>
                        <li><a href="#">Feedback</a></li>
                        <li><a href="#">Report a Bug</a></li>
                        <li><a href="#">Feature Request</a></li>
                    </ul>
                </div>
            </div>
            
            <div class="copyright">
                <p>&copy; 2023 ImageCompress Pro. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <!-- Toast Notification -->
    <div class="toast" id="toast">
        <i class="fas fa-check-circle"></i>
        <span id="toastMessage">Operation completed successfully!</span>
    </div>

    <script>
        // DOM Elements
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const browseBtn = document.getElementById('browseBtn');
        const compressionLevel = document.getElementById('compressionLevel');
        const compressionValue = document.getElementById('compressionValue');
        const compressBtn = document.getElementById('compressBtn');
        const downloadBtn = document.getElementById('downloadBtn');
        const resetBtn = document.getElementById('resetBtn');
        const originalPreview = document.getElementById('originalPreview');
        const compressedPreview = document.getElementById('compressedPreview');
        const originalSize = document.getElementById('originalSize');
        const compressedSize = document.getElementById('compressedSize');
        const originalDimensions = document.getElementById('originalDimensions');
        const compressedDimensions = document.getElementById('compressedDimensions');
        const savingsPercent = document.getElementById('savingsPercent');
        const savingsSize = document.getElementById('savingsSize');
        const qualityValue = document.getElementById('qualityValue');
        const outputFormat = document.getElementById('outputFormat');
        const resizeToggle = document.getElementById('resizeToggle');
        const resizeValue = document.getElementById('resizeValue');
        const historyList = document.getElementById('historyList');
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toastMessage');
        const uploadProgress = document.getElementById('uploadProgress');
        const uploadProgressBar = document.getElementById('uploadProgressBar');

        // Variables
        let originalImage = null;
        let compressedImageUrl = null;
        let compressionHistory = JSON.parse(localStorage.getItem('compressionHistory')) || [];

        // Event Listeners
        browseBtn.addEventListener('click', () => fileInput.click());
        fileInput.addEventListener('change', handleFileSelect);
        uploadArea.addEventListener('dragover', handleDragOver);
        uploadArea.addEventListener('drop', handleFileDrop);
        compressionLevel.addEventListener('input', updateCompressionValue);
        compressBtn.addEventListener('click', compressImage);
        downloadBtn.addEventListener('click', downloadImage);
        resetBtn.addEventListener('click', resetTool);
        resizeToggle.addEventListener('change', toggleResizeInput);
        window.addEventListener('load', loadHistory);

        // Functions
        function handleDragOver(e) {
            e.preventDefault();
            uploadArea.style.backgroundColor = 'rgba(67, 97, 238, 0.1)';
        }

        function handleFileDrop(e) {
            e.preventDefault();
            uploadArea.style.backgroundColor = '';
            
            if (e.dataTransfer.files.length) {
                fileInput.files = e.dataTransfer.files;
                handleFileSelect();
            }
        }

        function handleFileSelect() {
            if (fileInput.files && fileInput.files[0]) {
                const file = fileInput.files[0];
                
                // Check if file is an image
                if (!file.type.match('image.*')) {
                    showToast('Please select an image file (JPG, PNG, WebP, GIF)');
                    return;
                }
                
                // Check file size (max 10MB)
                if (file.size > 10 * 1024 * 1024) {
                    showToast('File size exceeds 10MB limit. Please choose a smaller image.');
                    return;
                }
                
                // Show upload progress
                uploadProgress.style.display = 'block';
                uploadProgressBar.style.width = '0%';
                
                // Simulate upload progress
                let progress = 0;
                const progressInterval = setInterval(() => {
                    progress += 5;
                    uploadProgressBar.style.width = `${progress}%`;
                    
                    if (progress >= 100) {
                        clearInterval(progressInterval);
                        uploadProgress.style.display = 'none';
                    }
                }, 50);
                
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    originalImage = new Image();
                    originalImage.onload = function() {
                        displayOriginalImage();
                        compressBtn.disabled = false;
                        showToast('Image uploaded successfully!');
                    };
                    originalImage.src = e.target.result;
                };
                
                reader.readAsDataURL(file);
            }
        }

        function displayOriginalImage() {
            originalPreview.innerHTML = '';
            const img = document.createElement('img');
            img.src = originalImage.src;
            img.alt = 'Original image';
            img.className = 'preview-image';
            originalPreview.appendChild(img);
            
            // Update file info
            const file = fileInput.files[0];
            originalSize.textContent = formatFileSize(file.size);
            originalDimensions.textContent = `${originalImage.width} × ${originalImage.height}`;
        }

        function updateCompressionValue() {
            const value = compressionLevel.value;
            compressionValue.textContent = `${value}%`;
            
            // Update quality indicator
            if (value >= 80) {
                qualityValue.textContent = 'High';
                qualityValue.style.color = 'var(--success)';
            } else if (value >= 50) {
                qualityValue.textContent = 'Medium';
                qualityValue.style.color = 'var(--primary)';
            } else {
                qualityValue.textContent = 'Low';
                qualityValue.style.color = 'var(--accent)';
            }
        }

        function compressImage() {
            if (!originalImage) return;
            
            // Show loading state
            compressBtn.innerHTML = '<div class="spinner"></div> Compressing...';
            compressBtn.disabled = true;
            
            // Get compression quality (0 to 1)
            const quality = compressionLevel.value / 100;
            
            // Get output format
            const format = outputFormat.value;
            let mimeType = 'image/jpeg';
            
            if (format === 'png') mimeType = 'image/png';
            else if (format === 'webp') mimeType = 'image/webp';
            else if (fileInput.files[0].type === 'image/png') mimeType = 'image/png';
            
            // Get resize options
            let width = originalImage.width;
            let height = originalImage.height;
            
            if (resizeToggle.value !== 'no' && resizeValue.value) {
                const resizeValueNum = parseInt(resizeValue.value);
                
                if (resizeToggle.value === 'width') {
                    const ratio = resizeValueNum / originalImage.width;
                    width = resizeValueNum;
                    height = Math.round(originalImage.height * ratio);
                } else if (resizeToggle.value === 'height') {
                    const ratio = resizeValueNum / originalImage.height;
                    height = resizeValueNum;
                    width = Math.round(originalImage.width * ratio);
                } else if (resizeToggle.value === 'percentage') {
                    const ratio = resizeValueNum / 100;
                    width = Math.round(originalImage.width * ratio);
                    height = Math.round(originalImage.height * ratio);
                }
            }
            
            // Use Compressor.js for actual compression
            const file = fileInput.files[0];
            
            new Compressor(file, {
                quality: quality,
                maxWidth: width,
                maxHeight: height,
                mimeType: mimeType,
                success(result) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        compressedImageUrl = e.target.result;
                        
                        // Display compressed image
                        compressedPreview.innerHTML = '';
                        const img = document.createElement('img');
                        img.src = compressedImageUrl;
                        img.alt = 'Compressed image';
                        img.className = 'preview-image';
                        compressedPreview.appendChild(img);
                        
                        // Calculate file sizes
                        const originalFileSize = file.size;
                        const compressedFileSize = result.size;
                        
                        // Update stats
                        compressedSize.textContent = formatFileSize(compressedFileSize);
                        compressedDimensions.textContent = `${width} × ${height}`;
                        
                        const savings = originalFileSize - compressedFileSize;
                        const percentSaved = Math.round((savings / originalFileSize) * 100);
                        
                        savingsPercent.textContent = `${percentSaved}%`;
                        savingsSize.textContent = formatFileSize(savings);
                        
                        // Enable download button
                        downloadBtn.disabled = false;
                        
                        // Add to history
                        addToHistory(file.name, originalFileSize, compressedFileSize, percentSaved);
                        
                        // Show success message
                        showToast(`Image compressed successfully! Saved ${percentSaved}%`);
                        
                        // Reset compress button
                        compressBtn.innerHTML = '<i class="fas fa-compress-alt"></i> Compress Image';
                        compressBtn.disabled = false;
                    };
                    reader.readAsDataURL(result);
                },
                error(err) {
                    console.error(err);
                    showToast('Error compressing image. Please try again.');
                    
                    // Reset compress button
                    compressBtn.innerHTML = '<i class="fas fa-compress-alt"></i> Compress Image';
                    compressBtn.disabled = false;
                }
            });
        }

        function downloadImage() {
            if (!compressedImageUrl) return;
            
            const a = document.createElement('a');
            a.href = compressedImageUrl;
            
            // Get file extension based on format
            const format = outputFormat.value;
            let extension = 'jpg';
            
            if (format === 'png') extension = 'png';
            else if (format === 'webp') extension = 'webp';
            else if (fileInput.files[0].type === 'image/png') extension = 'png';
            
            a.download = `compressed-image.${extension}`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            
            showToast('Image downloaded successfully!');
        }

        function resetTool() {
            fileInput.value = '';
            originalImage = null;
            compressedImageUrl = null;
            
            originalPreview.innerHTML = '<p style="color: var(--gray); padding: 3rem 0;">No image selected</p>';
            compressedPreview.innerHTML = '<p style="color: var(--gray); padding: 3rem 0;">Compressed image will appear here</p>';
            
            originalSize.textContent = '-';
            originalDimensions.textContent = '-';
            compressedSize.textContent = '-';
            compressedDimensions.textContent = '-';
            
            savingsPercent.textContent = '0%';
            savingsSize.textContent = '0 KB';
            
            compressBtn.disabled = true;
            downloadBtn.disabled = true;
            
            compressionLevel.value = 70;
            updateCompressionValue();
            
            showToast('Tool reset successfully!');
        }

        function toggleResizeInput() {
            resizeValue.disabled = resizeToggle.value === 'no';
        }

        function addToHistory(fileName, originalSize, compressedSize, savingsPercent) {
            const historyItem = {
                id: Date.now(),
                fileName: fileName,
                originalSize: originalSize,
                compressedSize: compressedSize,
                savingsPercent: savingsPercent,
                timestamp: new Date().toISOString(),
                thumbnail: compressedImageUrl
            };
            
            compressionHistory.unshift(historyItem);
            
            // Keep only last 10 items
            if (compressionHistory.length > 10) {
                compressionHistory = compressionHistory.slice(0, 10);
            }
            
            localStorage.setItem('compressionHistory', JSON.stringify(compressionHistory));
            loadHistory();
        }

        function loadHistory() {
            if (compressionHistory.length === 0) {
                historyList.innerHTML = '<p style="grid-column: 1 / -1; text-align: center; color: var(--gray);">No compression history yet</p>';
                return;
            }
            
            historyList.innerHTML = '';
            
            compressionHistory.forEach(item => {
                const historyItem = document.createElement('div');
                historyItem.className = 'history-item';
                historyItem.innerHTML = `
                    <img src="${item.thumbnail}" alt="${item.fileName}">
                    <div class="file-name">${item.fileName}</div>
                    <div style="font-size: 0.7rem; color: var(--success);">Saved ${item.savingsPercent}%</div>
                `;
                
                historyItem.addEventListener('click', () => {
                    // Load this image back into the tool
                    originalImage = new Image();
                    originalImage.onload = function() {
                        displayOriginalImage();
                        compressBtn.disabled = false;
                        showToast('Image loaded from history!');
                    };
                    originalImage.src = item.thumbnail;
                });
                
                historyList.appendChild(historyItem);
            });
        }

        function showToast(message) {
            toastMessage.textContent = message;
            toast.classList.add('show');
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }

        function formatFileSize(bytes) {
            if (bytes < 1024) return bytes + ' bytes';
            else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';
            else return (bytes / 1048576).toFixed(1) + ' MB';
        }

        // Initialize
        updateCompressionValue();
        toggleResizeInput();
    </script>
</body>
</html>
